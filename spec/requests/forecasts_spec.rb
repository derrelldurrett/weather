require 'rails_helper'
require_relative '../../lib/common_test_helpers/mocks_helper'
include MocksHelper

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/forecasts", type: :request do

  # describe "GET /show" do
  #   it "renders a successful response" do
  #     forecast = Forecast.create! valid_attributes
  #     get forecast_url(forecast)
  #     expect(response).to be_successful
  #   end
  # end

  # describe "GET /new" do
  #   it "renders a successful response" do
  #     get new_forecast_url
  #     expect(response).to be_successful
  #   end
  # end

  describe "POST /create" do
    context "with valid parameters" do
      let(:valid_attributes) { { "address" => "1 Apple Park Way, Cupertino, California" } }

      before do
        load_stubs_of_external_calls
      end

      it "creates a new Forecast" do
        expect {
          post forecasts_url, params: { forecast: valid_attributes }
        }.to change(Forecast, :count).by(1)
      end

      it "displays the created forecast" do
        post forecasts_url, params: { forecast: valid_attributes }
        expect(response).to redirect_to(forecast_url(Forecast.last))
      end
    end

    # context "with invalid parameters" do
    #   it "does not create a new Forecast" do
    #     expect {
    #       post forecasts_url, params: { forecast: invalid_attributes }
    #     }.to change(Forecast, :count).by(0)
    #   end
    #
    #
    #   it "renders a response with 422 status (i.e. to display the 'new' template)" do
    #     post forecasts_url, params: { forecast: invalid_attributes }
    #     expect(response).to have_http_status(:unprocessable_entity)
    #   end
    #
    # end
  end
end
